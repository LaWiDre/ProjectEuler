#= 

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

=# 

#Defining upper limit and variables
#Need to be global due to julia scope
global uplim = 4e6
global x1 = 1
global x2 = 2
global xnew = x1 + x2
global fibsum = 2 #starting at two since the algorithm checks for xnew which starts at 3! 

function isEven(n)
    #function checking whether n is even or odd
    try
        #Trying to see if the remainder still is an integer
        q = n/2
        q = Int64(q)
        return true
    catch InexactError
        return false
    end
end 

while xnew < uplim
    if (isEven(xnew))
        global fibsum += xnew
    end
    global x1 = x2
    global x2 = xnew
    global xnew = x1 + x2
end
println(fibsum)